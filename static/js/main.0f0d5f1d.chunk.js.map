{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Components/Header.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","term","query","encodeURIComponent","append_to_response","tvApi","HomeContainer","state","upComing","data","results","result","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","prototype","PropTypes","array","bool","isRequired","string","TVContainer","airingTday","Header","header","List","ul","Item","li","current","SLink","Link","withRouter","pathname","location","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","func","updateTermm","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Divider","Overview","p","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f0d5f1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.ae487a1b.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 32px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  font-size: 12px;\n`;\n\nconst Image = styled.div`\n  background-image: url(${(props) => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n  transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(225, 225, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n  <>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n  nowPlaying: PropTypes.array,\n  upComing: PropTypes.array,\n  popular: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"6561c51fcc6645ae8ce767150472825f\",\n    language: \"en-US\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upComing: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n  movieDetail: (id) =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  search: (term) =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term),\n      },\n    }),\n  showDetail: (id) =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n      },\n    }),\n};\n","import HomeContainer from \"./HomeContainer\";\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upComing: null,\n    popular: null,\n    error: null,\n    loading: true,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying },\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { result: upComing },\n      } = await moviesApi.upComing();\n      const {\n        data: { results: popular },\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upComing,\n        popular,\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\",\n      });\n    } finally {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upComing, popular, error, loading } = this.state;\n    console.log(this.state);\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upComing={upComing}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={show.first_air_date.substring(0, 4)}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.prototype = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null,\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated },\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular },\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday },\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\",\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingTday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 4px solid\n    ${(props) => (props.current ? \"#c0392b\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  loading,\n  searchTerm,\n  handleSubmit,\n  error,\n  updateTerm,\n}) => (\n  <Container>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV Shows...\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map((movie) => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                imageUrl={movie.poster_path}\n                title={movie.original_title}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map((show) => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                imageUrl={show.poster_path}\n                title={show.original_name}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults &&\n          movieResults &&\n          tvResults.length === 0 &&\n          movieResults.length === 0 && (\n            <Message text=\"Nothing found\" color=\"#95a5a6\" />\n          )}\n      </>\n    )}\n  </Container>\n);\n\nSearchPresenter.prototype = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  searchTerm: PropTypes.string,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTermm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { tvApi } from \"api\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null,\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const {\n      target: { value },\n    } = event;\n    this.setState({\n      searchTerm: value,\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    this.setState({ loading: true });\n    try {\n      const {\n        data: { results: movieResults },\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults },\n      } = await tvApi.search(searchTerm);\n      this.setState({\n        movieResults,\n        tvResults,\n      });\n    } catch {\n      this.setState({ error: \"Can't find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  position: relative;\n  z-index: 1;\n  height: 100%;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${(props) => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <Loader />\n  ) : (\n    <Container>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n            <Divider>•</Divider>\n            <Item>\n              {result.vote_average ? `⭐️${result.vote_average}/10` : ``}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n};\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi } from \"api\";\nimport { tvApi } from \"api\";\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname },\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\"),\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id },\n      },\n      history: { push },\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Header from \"Components/Header\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}